/*
ID: aayush02
LANG: C++11
TASK: cereal
*/
#include <assert.h> 
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <bitset>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <fstream>
#include <numeric>

#define INF 9223372036854775
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define f first
//#define s second

#define ll long long
#define fi(n) for (ll i = 0; i < n; i++)
#define fj(n) for (ll j = 0; j < n; j++)
#define pi pair<ll, ll>
#define pb push_back
#define sz(x) (int)x.size()
#define beg(x) x.begin()
#define en(x) x.end()
#define all(x) beg(x), en(x)

const int MOD = 1e9 + 7;
const int MX = 200005;

using namespace std;

void setIO(string name) {
#pragma warning (disable : 4996)
	ios_base::sync_with_stdio(0); cin.tie(0);
	freopen((name + ".in").c_str(), "r", stdin);
	freopen((name + ".out").c_str(), "w", stdout);
}


struct mi {
	int v; explicit operator int() const { return v; }
	mi(ll _v) : v(_v%MOD) { v += (v < 0)*MOD; }
	mi() : mi(0) {}
};
mi operator+(mi a, mi b) { return mi(a.v + b.v); }
mi operator-(mi a, mi b) { return mi(a.v - b.v); }
mi operator*(mi a, mi b) { return mi((ll)a.v*b.v); }

using ii = pair<ll, ll>;
using iii = tuple<ll, ll, ll>;
using vi = vector<ll>;
using pl = pair<ll, pair<ll, ll>>;
using vii = vector<ii>;
using vvii = vector<vii>;
using qii = priority_queue<ii, vii, greater<ii>>;
typedef pair<mi, mi> pmi;
typedef vector<mi> vmi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
using vvi = vector<vi>;
typedef vector<pmi> vpmi;

#define FORN(i, n) for (int i = 0; i <  (int)(n); i++)
#define FOR1(i, n) for (int i = 1; i <= (int)(n); i++)
#define FORD(i, n) for (int i = (int)(n) - 1; i >= 0; i--)
#define FOREACH(i, c) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)

#define MOD 1000000007
#define INF 2000000000

ll arr[100002][3]; // H P S
ll n;
int main()
{
	setIO("hps");
	cin >> n;
	char c;
	for(int i = 1; i <= n; i++)
	{
		cin >> c;
		if (c == 'H') arr[i][0]++;
		else if (c == 'P') arr[i][1]++;
		else arr[i][2]++;
	}
	ll pref[100002][3];
	ll suff[100002][3];
	memset(pref, 0, sizeof pref);
	memset(suff, 0, sizeof suff);
	for (int i = 1; i <= n; i++)
	{
		fj(3)
		{
			pref[i][j] += pref[i - 1][j];
		}
		fj(3)
		{
			pref[i][j] += arr[i][j];
		}
	}
	for (int i = n; i >= 0; i--)
	{
		fj(3)
		{
			suff[i][j] += suff[i + 1][j];
		}
		fj(3)
		{
			suff[i][j] += arr[i][j];
		}
	}
	ll ans = 0;
	ll suff_max = 0;
	ll pre_max = 0;
	for (int i = 1; i <= n; i++)
	{
		suff_max = 0;
		pre_max = 0;
		fj(3)
		{
			pre_max = max(pre_max, pref[i][j]);
			suff_max = max(suff_max, suff[i + 1][j]);
		}
		ans = max(ans, pre_max + suff_max);
	}
	cout << ans << endl;
}
