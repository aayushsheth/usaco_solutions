#include <assert.h> 
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <fstream>
#include <numeric>

#define INF 9223372036854775
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define f first
//#define s second

#define ll long long
#define fi(n) for (ll i = 0; i < n; i++)
#define fj(n) for (ll j = 0; j < n; j++)
#define pi pair<ll, ll>
#define pb push_back

const int MOD = 1e9 + 7;
const int MX = 200005;

using namespace std;

void setIO(string name) {
#pragma warning (disable : 4996)
	ios_base::sync_with_stdio(0); cin.tie(0);
	freopen((name + ".in").c_str(), "r", stdin);
	freopen((name + ".out").c_str(), "w", stdout);
}


struct mi {
	int v; explicit operator int() const { return v; }
	mi(ll _v) : v(_v%MOD) { v += (v < 0)*MOD; }
	mi() : mi(0) {}
};
mi operator+(mi a, mi b) { return mi(a.v + b.v); }
mi operator-(mi a, mi b) { return mi(a.v - b.v); }
mi operator*(mi a, mi b) { return mi((ll)a.v*b.v); }

using ii = pair<ll, ll>;
using iii = tuple<ll, ll, ll>;
using vi = vector<ll>;
using vii = vector<ii>;
using vvii = vector<vii>;
using qii = priority_queue<ii, vii, greater<ii>>;
typedef pair<mi, mi> pmi;
typedef vector<mi> vmi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
using vvi = vector<vi>;
typedef vector<pmi> vpmi;




ll n, k, t1, t2, t3;
vector<ll> t(10000);
vector <ll> a(10000);
vvi adj(10000);

ll dfs(ll curr, ll parent)
{
	for (ll i : adj[curr])
	{
		if (i != parent)
		{
			a[i]++;
			a[curr] += (12 - dfs(i, curr));
			a[curr] = (a[curr] - 1) % 12 + 1;
		}
	}
	if (parent >= 0)
	{
		a[parent]++;
	}
	return a[curr];
}

int main(void)
{
	setIO("clocktree");
	cin >> n;
	fi(n)
	{
		cin >> t[i];
	}
	fi(n-1)
	{
		cin >> t1 >> t2;
		t1--; t2--;
		adj[t1].pb(t2);
		adj[t2].pb(t1);
	}
	ll ans = 0;
	fi(n)
	{
		fj(n)
		{
			a[j] = t[j];
		}
		dfs(i, -1);
		if (a[i] == 1 || a[i] == 12)
		{
			ans++;
		}
	}
	cout << ans;
}


