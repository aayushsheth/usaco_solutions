/*
ID: aayush02
LANG: C++11
TASK: cowntagion
*/
#include <assert.h> 
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <fstream>
#include <numeric>
    
#define INF 9223372036854775
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define f first
//#define s second

#define ll long long
#define fi(n) for (ll i = 0; i < n; i++)
#define fj(n) for (ll j = 0; j < n; j++)
#define pi pair<ll, ll>
#define pb push_back

using namespace std;

const int MOD = 1000000007;

void setIO(string name) {
#pragma warning (disable : 4996)
    ios_base::sync_with_stdio(0); cin.tie(0);
    freopen((name + ".in").c_str(), "r", stdin);
    //freopen((name + ".out").c_str(), "w", stdout);
}


struct mi {
    int v; explicit operator int() const { return v; }
    mi(ll _v) : v(_v% MOD) { v += (v < 0) * MOD; }
    mi() : mi(0) {}
};
mi operator+(mi a, mi b) { return mi(a.v + b.v); }
mi operator-(mi a, mi b) { return mi(a.v - b.v); }
mi operator*(mi a, mi b) { return mi((ll)a.v * b.v); }

using ii = pair<ll, ll>;
using iii = tuple<ll, ll, ll>;
using vi = vector<ll>;
typedef pair<ll, int> pii;
using vii = vector<ii>;
using vvii = vector<vii>;
using qii = priority_queue<ii, vii, greater<ii>>;
typedef pair<mi, mi> pmi;
typedef vector<mi> vmi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
using vvi = vector<vi>;
typedef vector<pmi> vpmi;

ll n, m, x, y;
string s;
bool flag;
ll ans = 0;

int main() {
    int n, m;
    cin >> n >> m;
    string s;
    cin >> s;
    fj(m)
    {
        ans = 0;
        flag = false;
        cin >> x >> y; x--; y--;
        for (char c = 'A'; c <= 'Z'; c++)
        {
            flag = false;
            fi(n)
            {
                if (x <= i && i <= y || s[i] < c)
                {
                    flag = false;
                }
                else if (s[i] == c){
                    if (!flag){
                        flag = true;
                        ans++;
                    }
                    else{
                        continue;
                    }
                }
            }
        }
        cout << ans << endl;
    }

}