#include <assert.h> 
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <fstream>
#include <numeric>
    
#define INF 9223372036854775
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define f first
//#define s second

#define ll long long
#define fi(n) for (ll i = 0; i < n; i++)
#define fj(n) for (ll j = 0; j < n; j++)
#define pi pair<ll, ll>
#define pb push_back

using namespace std;

const int MOD = 1000000007;

void setIO(string name) {
#pragma warning (disable : 4996)
    ios_base::sync_with_stdio(0); cin.tie(0);
    freopen((name + ".in").c_str(), "r", stdin);
    freopen((name + ".out").c_str(), "w", stdout);
}


struct mi {
    int v; explicit operator int() const { return v; }
    mi(ll _v) : v(_v% MOD) { v += (v < 0) * MOD; }
    mi() : mi(0) {}
};
mi operator+(mi a, mi b) { return mi(a.v + b.v); }
mi operator-(mi a, mi b) { return mi(a.v - b.v); }
mi operator*(mi a, mi b) { return mi((ll)a.v * b.v); }

using ii = pair<ll, ll>;
using iii = tuple<ll, ll, ll>;
using vi = vector<ll>;
typedef pair<ll, int> pii;
using vii = vector<ii>;
using vvii = vector<vii>;
using qii = priority_queue<ii, vii, greater<ii>>;
typedef pair<mi, mi> pmi;
typedef vector<mi> vmi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
using vvi = vector<vi>;
typedef vector<pmi> vpmi;

//const ll MX;


#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <numeric>
#pragma warning(disable:4996)

#define INF 10000000000
#define MOD 1000000007

#define all(a) a.begin(),a.end()
#define fill(a) for(int i=0;i<n;i++)cin>>a[i];
using namespace std;


const ll MX = 100001;

ll n, a, b, c;
vector<pair<pair<ll, ll>, ll >> v;

int main() {
    setIO("convention2");
    cin >> n; 
    fi(n) {
        cin >> a >> b; 
        v.push_back({ {a,b}, -i });
    }
    sort(all(v));
    ll currtime = 0;
    ll index = 0, ans = 0;
    priority_queue<pair<ll,pair<ll, ll>>> p;
    while (index < n) {
        if (v[index].first.first >= currtime and p.empty()) {
            currtime = v[index].first.first + v[index].first.second;
            index++;
        }
        while (index < n and v[index].first.first <= currtime and index < n) {
            p.push({ v[index].second, v[index].first });
            index++;
        }
        while (!p.empty()) {
            a = p.top().first; b = p.top().second.first; c = p.top().second.second;
            p.pop();
            ans = max(ans, currtime - b);
            currtime += c;
            while (index < n and v[index].first.first <= currtime and index < n) {
                p.push({ v[index].second, v[index].first });
                index++;
            }
        }
    }
    cout << ans << endl;
    return 0;
}