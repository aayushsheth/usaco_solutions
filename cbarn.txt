#include <assert.h> 
#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <fstream>
#include <numeric>
    
#define INF 9223372036854775
#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define F0R(i, a) for (int i = 0; i < (a); i++)
#define f first
//#define s second

#define ll long long
#define fi(n) for (ll i = 0; i < n; i++)
#define fj(n) for (ll j = 0; j < n; j++)
#define pi pair<ll, ll>
#define pb push_back

using namespace std;

const int MOD = 1000000007;

void setIO(string name) {
#pragma warning (disable : 4996)
    ios_base::sync_with_stdio(0); cin.tie(0);
    freopen((name + ".in").c_str(), "r", stdin);
    freopen((name + ".out").c_str(), "w", stdout);
}


struct mi {
    int v; explicit operator int() const { return v; }
    mi(ll _v) : v(_v% MOD) { v += (v < 0) * MOD; }
    mi() : mi(0) {}
};
mi operator+(mi a, mi b) { return mi(a.v + b.v); }
mi operator-(mi a, mi b) { return mi(a.v - b.v); }
mi operator*(mi a, mi b) { return mi((ll)a.v * b.v); }

using ii = pair<ll, ll>;
using iii = tuple<ll, ll, ll>;
using vi = vector<ll>;
typedef pair<ll, int> pii;
using vii = vector<ii>;
using vvii = vector<vii>;
using qii = priority_queue<ii, vii, greater<ii>>;
typedef pair<mi, mi> pmi;
typedef vector<mi> vmi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
using vvi = vector<vi>;
typedef vector<pmi> vpmi;

//const ll MX;


#include <iostream>
#include <string>
#include <sstream>
#include <iomanip> 
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <numeric>
#pragma warning(disable:4996)

#define INF 10000000000
#define MOD 1000000007

#define all(a) a.begin(),a.end()
#define fill(a) for(int i=0;i<n;i++)cin>>a[i];
using namespace std;

ll n, x, y;
vector<ll> circle;
vector<bool> barn;

priority_queue < pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>> p;

ll sum_of_n(ll n) {
    return (((n) * (n + 1) * (2 * n + 1)) / 6);
}

ll first_square(ll n) {
    if (n == 0) return 0;
    return sum_of_n(n);
}

ll check() {
    barn = vector<bool>(2 * n);
    ll cost = 0;
    ll start = 0;
    ll index = 0; 
    while (start < n) {
        if (circle[start] == 0) {
            if (start == index) index++;
            start++;
            continue;
        }
        x = circle[start];
        if (index == start and barn[index] == false) {
            barn[index] = true;
            if (index < n) {
                barn[index + n] = true;
            }
            x--; 
            index++;
        }
        if (x == 0 and index == start) {
            barn[index] = true;
            if (index < n) {
                barn[index + n] = true;
            }
            index++; start++; continue;
        }
        while (x > 0) {
            if (barn[index] == true) {
                index++; continue;
            }
            cost += ((index-start) * (index-start));
            x--;
            barn[index] = true;
            if (index < n) {
                barn[index + n] = true;
            }
            index++;
        }
        start++;
    }
    return cost;
}

int main() {
    setIO("cbarn");
    cin >> n;
    circle.resize(2 * n);
    fi(n) {
        cin >> circle[i];
        circle[i + n] = circle[i];
    }
    barn.resize(n);
    ll ans = INF;
    fi(n) {
        ans = min(ans, check());
        //cout << check() << endl;
        rotate(circle.begin(), circle.begin() + 1, circle.end());
    }
    cout << ans << endl;
}