/*
ID: aayush02
LANG: C++11
TASK: milkorder
*/
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <climits>
#include <cassert>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <sstream>
#include <numeric>
#include <fstream>
#include <iostream>
#include <utility>
#include <iomanip>
#include <stack>

using namespace std;

vector <int> priority(101);
int sett [101];
bool has[101], h[101];
int M, N, K;
int temp, temp1;
/* Driver program to test above functions */
int f(int x)
{
	for (int i = 0; i <= 100; i++)
	{
		if (sett[i] == x)
		{
			return i;
		}
	}
	return 0;
}

int main(void)
{
	int maxx = -1;
	ifstream fin("milkorder.in");
	ofstream fout("milkorder.out");
	fin >> N >> M >> K;
	for (int i = 0; i < M; i++)
	{
		fin >> temp;
		priority[i] =temp;
		h[temp] = true;
	}

	for (int i = 0; i < K; i++)
	{
		fin >> temp >> temp1;
		sett[temp1] = temp;
		has[temp] = true;
	}
	int x = 0;
	int y = 1;
	int t;
	while (x != M)
	{
		t = priority[x];
		if (has[t])
		{
			y = f(t) + 1;
			x++;
			continue;
		}
		if (sett[y] != 0)
		{
			y++;
			continue;
		}
		if (sett[y] == 0)
		{
			sett[y] = t;
			x++;
		}
	}

	if (h[1])
	{
		fout << f(1) << "\n";
		return 0;
	}

	for (int i = N; i > 0; i--)
	{
		if (h[sett[i]] && has[sett[i]] == true)
		{
			fout << i + 1 << endl;
			return 0;
		}
	}

	for (int i = 0; i <= N; i++)
	{
		if (sett[i] == 0)
		{
			fout << i << endl;
		}
	}
}



